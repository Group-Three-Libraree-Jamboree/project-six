{"version":3,"sources":["components/firebase.js","components/Header.js","components/NewCalendar.js","components/DisplayMoney.js","components/RemoveTrans.js","components/TransactionRecords.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Header","NewCalendar","getCurrentDate","today","Date","date","getFullYear","getMonth","slice","getDate","setState","todayFull","whenDateChanges","e","pickedDate","target","value","fullSelectedDate","fullSelected","d1","state","d2","days","parseInt","alert","getDaysLeft","day","props","selectedDate","this","htmlFor","onChange","type","id","name","min","Component","DisplayMoney","calcDailyBudget","dailybudget","total","amountToSave","daysToNextCheck","subtractExpenses","checkExpenses","database","ref","on","result","tran","val","holdTrans","key","push","amount","sumOfEx","map","v","transactionsAmount","length","reduce","accumulator","currentValue","newTotal","paycheck","data","className","toFixed","Transaction","index","aria-label","onClick","child","remove","description","TransactionRecords","handleChange","event","preventDefault","addTransactionToDb","dbRef","transAmount","transactionsToStoreInFb","transDescr","appendTransaction","allTransactions","trans","transName","transId","required","placeholder","Footer","href","App","saveToDb","savings","dataToStoreInFb","update","handleUserInput","calcTotal","dailyExpenses","afterSaving","onSubmit","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.735a7057.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/database';\n\nconst firebaseConfig = {\n\tapiKey: 'AIzaSyAFZe3GsqX7FKN8wgInodZi2hxUhMQgyF0',\n\tauthDomain: 'project-six-group-three.firebaseapp.com',\n\tdatabaseURL: 'https://project-six-group-three.firebaseio.com',\n\tprojectId: 'project-six-group-three',\n\tstorageBucket: 'project-six-group-three.appspot.com',\n\tmessagingSenderId: '136712194355',\n\tappId: '1:136712194355:web:d64e186c3ca40900601646',\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\n\nexport default firebase;\n","import React from 'react';\n\nconst Header = () => {\n\treturn (\n\t\t<header>\n\t\t\t<h1>Daily Budget Calculator</h1>\n\t\t\t<p>Helping you save for a rainy day.</p>\n\t\t</header>\n\t);\n};\n\nexport default Header;\n","import React, { Component } from 'react';\n\nclass NewCalendar extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\ttodayFull: new Date(),\n\t\t\ttoday: '',\n\t\t\tselectedDate: '',\n\t\t\tfullSelected: new Date(),\n\t\t\tdays: 0,\n\t\t};\n\t}\n\n\t// This creates the date format needed to use in the calendar's value and adds it to state. It also grabs the current full js date and puts it state\n\tgetCurrentDate = () => {\n\t\tconst today = new Date();\n\t\tconst date =\n\t\t\ttoday.getFullYear() +\n\t\t\t'-' +\n\t\t\t('0' + (today.getMonth() + 1)).slice(-2) +\n\t\t\t'-' +\n\t\t\t('0' + today.getDate()).slice(-2);\n\n\t\tthis.setState({\n\t\t\ttodayFull: today,\n\t\t\ttoday: date,\n\t\t});\n\t};\n\n\t// When the user changes the date this function will add the calendar format value to state. It also grabs the selected full js date and puts it state. \n\twhenDateChanges = (e) => {\n\t\tconst pickedDate = e.target.value;\n\t\tconst fullSelectedDate = new Date(e.target.value);\n\t\tthis.setState(\n\t\t\t{\n\t\t\t\ttoday: pickedDate,\n\t\t\t\tfullSelected: fullSelectedDate,\n\t\t\t},\n\t\t\t() => {\n\t\t\t\tconst d1 = this.state.fullSelected;\n\t\t\t\tconst d2 = this.state.todayFull;\n\n\t\t\t\t// determines the remaining days from current date to selected date.\n\t\t\t\tthis.setState(\n\t\t\t\t\t{\n\t\t\t\t\t\tdays: parseInt((d1 - d2) / (24 * 3600 * 1000) + 1),\n\t\t\t\t\t},\n\t\t\t\t\t() => {\n\t\t\t\t\t\t//making sure the next paycheck is not today\n\t\t\t\t\t\tif (this.state.days === 0) {\n\t\t\t\t\t\t\treturn alert('Please select a date different from today');\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.getDaysLeft();\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t);\n\t};\n\n\tcomponentDidMount() {\n\t\tthis.getCurrentDate();\n\t\tthis.getDaysLeft();\n\t}\n\n\t// used to pass remaining days to App.js\n\tgetDaysLeft = (day) => {\n\t\tday = this.state.days;\n\t\tthis.props.getDaysLeft(day);\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<label htmlFor=\"transactions\">Next Paycheck</label>\n\t\t\t\t<input\n\t\t\t\t\tonChange={this.whenDateChanges}\n\t\t\t\t\ttype=\"date\"\n\t\t\t\t\tid=\"transactions\"\n\t\t\t\t\tname=\"transactions\"\n\t\t\t\t\tmin={this.state.today}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default NewCalendar;\n","import React, { Component } from 'react';\nimport firebase from 'firebase';\n\nclass DisplayMoney extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\ttotal: 0,\n\t\t\tamountToSave: 0,\n\t\t\tdaysToNextCheck: 0,\n\t\t\tpaycheck: 0,\n\t\t\tdailybudget: 0,\n\t\t\ttransactionsAmount: 0,\n\t\t\tnewTotal: 0,\n\t\t};\n\t}\n\n\t// grabs data from DB and loops though it, pushing it to state so that it can be displayed on screen.\n\tcomponentDidMount() {\n\t\tconst userRef = firebase.database().ref('user');\n\t\tuserRef.on('value', (result) => {\n\t\t\tconst data = result.val();\n\n\t\t\tfor (let key in data) {\n\t\t\t\t// userMoney.push({ [key]: data[key] });\n\t\t\t\tthis.setState(\n\t\t\t\t\t{\n\t\t\t\t\t\t[key]: parseInt(data[key]),\n\t\t\t\t\t},\n\t\t\t\t\t() => {\n\t\t\t\t\t\tthis.calcDailyBudget();\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\n\t\tthis.checkExpenses();\n\t}\n\n\tcalcDailyBudget = () => {\n\t\tconst dailybudget =\n\t\t\t(this.state.total - this.state.amountToSave) / this.state.daysToNextCheck;\n\n\t\tthis.setState(\n\t\t\t{\n\t\t\t\tdailybudget: dailybudget,\n\t\t\t},\n\t\t\t() => {\n\t\t\t\tthis.subtractExpenses();\n\t\t\t}\n\t\t);\n\t};\n\n\tcheckExpenses = () => {\n\t\tconst exRef = firebase.database().ref('Transactions');\n\t\texRef.on('value', (result) => {\n\t\t\tconst tran = result.val();\n\n\t\t\t// loop through the transactions object and get the amount values and store them in an array\n\t\t\tconst holdTrans = [];\n\t\t\tfor (let key in tran) {\n\t\t\t\tholdTrans.push(tran[key].amount);\n\t\t\t}\n\t\t\t// turn transaction values from a string to a number\n\t\t\tconst sumOfEx = holdTrans.map((v) => parseInt(v));\n\n\t\t\t// adds up all numbers in the array\n\t\t\tconst reducer = (accumulator, currentValue) => accumulator + currentValue;\n\n\t\t\t// Checks to see if the array empty if so it sets the value to 0\n\t\t\tthis.setState(\n\t\t\t\t{\n\t\t\t\t\ttransactionsAmount: sumOfEx.length > 0 ? sumOfEx.reduce(reducer) : 0,\n\t\t\t\t},\n\t\t\t\t() => {\n\t\t\t\t\tthis.subtractExpenses();\n\t\t\t\t}\n\t\t\t);\n\t\t});\n\t};\n\n\tsubtractExpenses = () => {\n\t\tconst { total, transactionsAmount, daysToNextCheck } = this.state;\n\t\tlet newTotal = (total - transactionsAmount) / daysToNextCheck;\n\t\t//makes sure the value is non NaN\n\n\t\tnewTotal = newTotal ? newTotal : 0\n\n\t\tthis.setState({\n\t\t\tnewTotal: newTotal,\n\t\t});\n\t};\n\n\trender() {\n\t\tconst {\n\t\t\tpaycheck,\n\t\t\tdaysToNextCheck,\n\t\t\tamountToSave,\n\t\t\tnewTotal,\n\t\t} = this.state;\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<ul className=\"dailyInfo\">\n\t\t\t\t\t<li>\n\t\t\t\t\t\tYour started with $<span>{paycheck.toFixed(2)}</span>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\tYou plan to save $<span>{amountToSave.toFixed(2)}</span>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\tYou have <span>{daysToNextCheck}</span> days till your next paycheck.\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\tYour Daily Budget is $<span>{newTotal.toFixed(2)}</span>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default DisplayMoney;\n","import React from 'react';\nimport firebase from './firebase.js'\n\nfunction Transaction(props) {\n\n\n  const deleteItem = () => {\n    const itemRef = firebase.database().ref('Transactions').child(props.index)\n    itemRef.remove()\n  }\n\n  return (\n    <li className=\"displayTransactions\" key={props.index}>\n      <button className=\"remove\" aria-label=\"remove expense\" onClick={deleteItem}>-</button>\n      <span>{props.description}: ${props.amount}</span>  \n    </li>\n  )\n}\n\n\nexport default Transaction;","import React, { Component } from 'react';\nimport firebase from 'firebase';\nimport Transaction from './RemoveTrans';\n\nclass TransactionRecords extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\ttransDescr: '',\n\t\t\ttransAmount: '',\n\t\t\tallTransactions: [],\n\t\t};\n\t}\n\t//onChange grabs values from input fields (transDescr and transAmount) and saves to the state\n\thandleChange = (event) => {\n\t\tevent.preventDefault();\n\t\tthis.setState({\n\t\t\t[event.target.name]: event.target.value,\n\t\t});\n\t};\n\n\t//creates a new firebase record as a child of 'Transactions': transDescr and transAmount\n\taddTransactionToDb = () => {\n\t\tconst dbRef = firebase.database().ref('Transactions');\n\t\tconst { transAmount, transDescr } = this.state;\n\t\tlet transactionsToStoreInFb = {\n\t\t\tdescription: transDescr,\n\t\t\tamount: transAmount,\n\t\t};\n\t\tdbRef.push(transactionsToStoreInFb);\n\n\t\t// empty input fields on Submit\n\t\tthis.setState({\n\t\t\ttransDescr: '',\n\t\t\ttransAmount: '',\n\t\t});\n\t};\n\n\t//when the page is rendered, retrieves all \"Transactions\" records from firebase, creates a copy and saves to state (this.state.allTransactions)\n\tcomponentDidMount() {\n\t\tconst dbRef = firebase.database().ref('Transactions');\n\t\tdbRef.on('value', (result) => {\n\t\t\tconst data = result.val();\n\t\t\tconst allTransactions = [];\n\t\t\tfor (let key in data) {\n\t\t\t\tallTransactions.push({\n\t\t\t\t\ttransName: data[key].description,\n\t\t\t\t\ttransAmount: data[key].amount,\n\t\t\t\t\ttransId: key,\n\t\t\t\t});\n\t\t\t}\n\t\t\tthis.setState({\n\t\t\t\tallTransactions: allTransactions,\n\t\t\t});\n\t\t});\n\t}\n\n\t//prints to the page all paired items (amount and description) from this.state.allTransactions\n\tappendTransaction = () => {\n\t\treturn (\n\t\t\t<ul className=\"transactions\">\n\t\t\t\t{this.state.allTransactions.map((trans, index) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Transaction\n\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\tdescription={trans.transName}\n\t\t\t\t\t\t\tamount={trans.transAmount}\n\t\t\t\t\t\t\tindex={trans.transId}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</ul>\n\t\t);\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h3 className=\"addExpense\">Add Expense</h3>\n\t\t\t\t<div className=\"expenseInfo\">\n\t\t\t\t\t<label htmlFor=\"transDescr\" className=\"sr-only\">\n\t\t\t\t\t\tDescription of expense\n\t\t\t\t\t</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\trequired\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tname=\"transDescr\"\n\t\t\t\t\t\tid=\"transDescr\"\n\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\tplaceholder=\"Expense description\"\n\t\t\t\t\t\tvalue={this.state.transDescr}\n\t\t\t\t\t/>\n\t\t\t\t\t<label htmlFor=\"transAmount\" className=\"sr-only\">\n\t\t\t\t\t\tDescription of expense\n\t\t\t\t\t</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\trequired\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tname=\"transAmount\"\n\t\t\t\t\t\tid=\"transAmount\"\n\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\tplaceholder=\"Expense amount\"\n\t\t\t\t\t\tvalue={this.state.transAmount}\n\t\t\t\t\t/>\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"add\"\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\taria-label=\"add transaction\"\n\t\t\t\t\t\tonClick={this.addTransactionToDb}\n\t\t\t\t\t>\n\t\t\t\t\t\t+\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\n\t\t\t\t{/* appends all transaction records to the page */}\n\t\t\t\t{this.appendTransaction()}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default TransactionRecords;\n","import React from 'react';\n\nconst Footer = () => {\n\treturn (\n\t\t<footer>\n\t\t\t<p>Made by <a href=\"http://www.heatherandreadis.com/\">Heather</a>, <a href=\"https://nikitaguliaev.com\">Nikita</a>, <a href=\"https://tiffany-tubi.com\">Tiffany</a>, and <a href=\"https://www.dustinkelly.dev/\">Dustin</a></p>\n\t\t</footer>\n\t);\n};\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport firebase from './components/firebase';\nimport Header from './components/Header';\nimport NewCalendar from './components/NewCalendar';\nimport DisplayMoney from './components/DisplayMoney';\nimport TransactionRecords from './components/TransactionRecords';\nimport Footer from './components/Footer';\nimport './App.scss';\n\nclass App extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tpaycheck: 0,\n\t\t\tsavings: 0,\n\t\t\tdays: 0,\n\t\t\tdailybudget: 0,\n\t\t\ttotal: 0,\n\t\t\tafterSaving: 0,\n\t\t\tdailyExpenses: 0,\n\t\t};\n\t}\n\n\t// This function creates an object to save the firebase based on state.\n\tsaveToDb = () => {\n\t\tconst dbRef = firebase.database().ref('user');\n\t\tconst { paycheck, savings, days, total } = this.state;\n\t\tconst dataToStoreInFb = {\n\t\t\ttotal: total,\n\t\t\tdaysToNextCheck: days,\n\t\t\tpaycheck: paycheck,\n\t\t\tamountToSave: savings,\n\t\t};\n\t\tdbRef.update(dataToStoreInFb);\n\t};\n\n\t// this function grabs all input values from app.js and adds it to state\n\thandleUserInput = (event) => {\n\t\tthis.setState({\n\t\t\t[event.target.name]: event.target.value,\n\t\t});\n\t};\n\n\tcalcTotal = () => {\n\t\t//clears the inputs onSubmit. Uncomment preventdefault if we want to keep inputs \n\t\t\n\n\t\t//making sure Saving input is not larger than Paycheck input\n\t\tif (this.state.paycheck < this.state.savings) {\n\t\t\treturn alert(\"You cannot save more than your paycheck. Sorry...\")\n\t\t}\n\t\t\n\t\tconst total =\n\t\t\tthis.state.paycheck - this.state.savings - this.state.dailyExpenses;\n\t\tthis.setState(\n\t\t\t{\n\t\t\t\ttotal: total,\n\t\t\t},\n\t\t\t() => {\n\t\t\t\tthis.calcDailyBudget();\n\t\t\t}\n\t\t);\n\t};\n\n\tcalcDailyBudget = () => {\n\t\tconst dailybudget = this.state.total / this.state.days;\n\t\tthis.setState(\n\t\t\t{\n\t\t\t\tdailybudget: dailybudget,\n\t\t\t},\n\t\t\t() => {\n\t\t\t\tthis.saveToDb();\n\t\t\t}\n\t\t);\n\t};\n\n\ngetDaysLeft = (days) => {\n\tthis.setState({\n\t\tdays:days\n\t})\n}\n\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<Header />\n\n\t\t\t\t<main>\n\t\t\t\t\t<div className=\"wrapper\">\n\t\t\t\t\t\t<div className=\"inputForm half\">\n\t\t\t\t\t\t\t<form className=\"paymentSubmit\" onSubmit={this.calcTotal}>\n\t\t\t\t\t\t\t\t<h3>Income</h3>\n\t\t\t\t\t\t\t\t<label htmlFor=\"paycheck\">How much is your paycheck?</label>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tplaceholder=\"e.g. 6,000.00\"\n\t\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\t\tid=\"paycheck\"\n\t\t\t\t\t\t\t\t\tname=\"paycheck\"\n\t\t\t\t\t\t\t\t\tonChange={this.handleUserInput}\n\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t></input>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<NewCalendar getDaysLeft={this.getDaysLeft} />\n\t\t\t\t\t\t\t\t<label htmlFor=\"savings\">How much are you saving?</label>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tplaceholder=\"e.g. 1,000.00\"\n\t\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\t\tid=\"savings\"\n\t\t\t\t\t\t\t\t\tname=\"savings\"\n\t\t\t\t\t\t\t\t\tonChange={this.handleUserInput}\n\t\t\t\t\t\t\t\t></input>\n\t\t\t\t\t\t\t\t<button className=\"nextButton\" type=\"submit\">\n\t\t\t\t\t\t\t\t\tAdd Paycheck\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className=\"budgetSection half\">\n\t\t\t\t\t\t\t<h3>Budget</h3>\n\t\t\t\t\t\t\t<div className=\"budget\">\n\t\t\t\t\t\t\t\t<DisplayMoney />\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<TransactionRecords />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</main>\n\n\t\t\t\t<Footer />\n\t\t\t</div>\n\t\t);\n\t}\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}